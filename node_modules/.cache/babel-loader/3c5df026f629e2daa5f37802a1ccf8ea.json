{"ast":null,"code":"import _objectSpread from \"C:/Users/Alex/Desktop/car/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Alex/Desktop/car/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"radius\", \"leftSide\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\car\\\\src\\\\Wheel.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { forwardRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useCylinder } from '@react-three/cannon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseGLTF.preload('/Wheel.glb'); // Auto-generated by: https://github.com/pmndrs/gltfjsx\n\nvar Wheel = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 0.7 : _ref$radius,\n      leftSide = _ref.leftSide,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGLTF = useGLTF('/wheel.glb'),\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  useCylinder(function () {\n    return _objectSpread({\n      mass: 1,\n      type: 'Kinematic',\n      material: 'wheel',\n      collisionFilterGroup: 0,\n      args: [radius, radius, 0.5, 16]\n    }, props);\n  }, ref);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n}, \"PO5bAqKcdcNLHKn2bp629accQTk=\", false, function () {\n  return [useGLTF, useCylinder];\n}));\n_c2 = Wheel;\nexport default Wheel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wheel$forwardRef\");\n$RefreshReg$(_c2, \"Wheel\");","map":{"version":3,"names":["forwardRef","useGLTF","useCylinder","preload","Wheel","ref","radius","leftSide","props","nodes","materials","mass","type","material","collisionFilterGroup","args"],"sources":["C:/Users/Alex/Desktop/car/src/Wheel.js"],"sourcesContent":["import { forwardRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useCylinder } from '@react-three/cannon'\r\n\r\nuseGLTF.preload('/Wheel.glb')\r\n\r\n// Auto-generated by: https://github.com/pmndrs/gltfjsx\r\nconst Wheel = forwardRef(({ radius = 0.7, leftSide, ...props }, ref) => {\r\n  const { nodes, materials } = useGLTF('/wheel.glb')\r\n  useCylinder(() => ({ mass: 1, type: 'Kinematic', material: 'wheel', collisionFilterGroup: 0, args: [radius, radius, 0.5, 16], ...props }), ref)\r\n  return (\r\n    <mesh ref={ref}>\r\n    </mesh>\r\n  )\r\n})\r\n\r\nexport default Wheel\r\n"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEAD,OAAO,CAACE,OAAR,CAAgB,YAAhB,E,CAEA;;AACA,IAAMC,KAAK,gBAAGJ,UAAU,SAAC,gBAAuCK,GAAvC,EAA+C;EAAA;;EAAA,uBAA5CC,MAA4C;EAAA,IAA5CA,MAA4C,4BAAnC,GAAmC;EAAA,IAA9BC,QAA8B,QAA9BA,QAA8B;EAAA,IAAjBC,KAAiB;;EACtE,eAA6BP,OAAO,CAAC,YAAD,CAApC;EAAA,IAAQQ,KAAR,YAAQA,KAAR;EAAA,IAAeC,SAAf,YAAeA,SAAf;;EACAR,WAAW,CAAC;IAAA;MAASS,IAAI,EAAE,CAAf;MAAkBC,IAAI,EAAE,WAAxB;MAAqCC,QAAQ,EAAE,OAA/C;MAAwDC,oBAAoB,EAAE,CAA9E;MAAiFC,IAAI,EAAE,CAACT,MAAD,EAASA,MAAT,EAAiB,GAAjB,EAAsB,EAAtB;IAAvF,GAAqHE,KAArH;EAAA,CAAD,EAAgIH,GAAhI,CAAX;EACA,oBACE;IAAM,GAAG,EAAEA;EAAX;IAAA;IAAA;IAAA;EAAA,SADF;AAID,CAPuB;EAAA,QACOJ,OADP,EAEtBC,WAFsB;AAAA,GAAxB;MAAME,K;AASN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
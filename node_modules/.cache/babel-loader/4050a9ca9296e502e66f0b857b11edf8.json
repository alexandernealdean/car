{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { SimplifyModifier } from 'three-stdlib';\n\nfunction useSimplification(simplePercent) {\n  var ref = React.useRef();\n  var original = React.useRef();\n  var modifier = React.useRef();\n  React.useEffect(function () {\n    if (!original.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new SimplifyModifier();\n    }\n  }, []);\n  React.useEffect(function () {\n    if (original.current && ref.current) {\n      var geometry = new THREE.BufferGeometry();\n      geometry = original.current.clone();\n      var count = Math.floor(geometry.attributes.position.count * simplePercent); // number of vertices to remove\n\n      ref.current.geometry = modifier.current.modify(geometry, count);\n    }\n  }, [simplePercent]);\n  return ref;\n}\n\nexport { useSimplification };","map":{"version":3,"names":["React","THREE","SimplifyModifier","useSimplification","simplePercent","ref","useRef","original","modifier","useEffect","current","geometry","clone","BufferGeometry","count","Math","floor","attributes","position","modify"],"sources":["C:/Users/Alex/Desktop/car/node_modules/@react-three/drei/core/useSimplification.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { SimplifyModifier } from 'three-stdlib';\n\nfunction useSimplification(simplePercent) {\n  const ref = React.useRef();\n  const original = React.useRef();\n  const modifier = React.useRef();\n  React.useEffect(() => {\n    if (!original.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new SimplifyModifier();\n    }\n  }, []);\n  React.useEffect(() => {\n    if (original.current && ref.current) {\n      let geometry = new THREE.BufferGeometry();\n      geometry = original.current.clone();\n      const count = Math.floor(geometry.attributes.position.count * simplePercent); // number of vertices to remove\n\n      ref.current.geometry = modifier.current.modify(geometry, count);\n    }\n  }, [simplePercent]);\n  return ref;\n}\n\nexport { useSimplification };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,cAAjC;;AAEA,SAASC,iBAAT,CAA2BC,aAA3B,EAA0C;EACxC,IAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,EAAZ;EACA,IAAMC,QAAQ,GAAGP,KAAK,CAACM,MAAN,EAAjB;EACA,IAAME,QAAQ,GAAGR,KAAK,CAACM,MAAN,EAAjB;EACAN,KAAK,CAACS,SAAN,CAAgB,YAAM;IACpB,IAAI,CAACF,QAAQ,CAACG,OAAd,EAAuB;MACrBH,QAAQ,CAACG,OAAT,GAAmBL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBC,KAArB,EAAnB;MACAJ,QAAQ,CAACE,OAAT,GAAmB,IAAIR,gBAAJ,EAAnB;IACD;EACF,CALD,EAKG,EALH;EAMAF,KAAK,CAACS,SAAN,CAAgB,YAAM;IACpB,IAAIF,QAAQ,CAACG,OAAT,IAAoBL,GAAG,CAACK,OAA5B,EAAqC;MACnC,IAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACY,cAAV,EAAf;MACAF,QAAQ,GAAGJ,QAAQ,CAACG,OAAT,CAAiBE,KAAjB,EAAX;MACA,IAAME,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAQ,CAACM,UAAT,CAAoBC,QAApB,CAA6BJ,KAA7B,GAAqCV,aAAhD,CAAd,CAHmC,CAG2C;;MAE9EC,GAAG,CAACK,OAAJ,CAAYC,QAAZ,GAAuBH,QAAQ,CAACE,OAAT,CAAiBS,MAAjB,CAAwBR,QAAxB,EAAkCG,KAAlC,CAAvB;IACD;EACF,CARD,EAQG,CAACV,aAAD,CARH;EASA,OAAOC,GAAP;AACD;;AAED,SAASF,iBAAT"},"metadata":{},"sourceType":"module"}